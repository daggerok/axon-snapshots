buildscript {
  ext {
    javaVersion = "1.8"
    kotlinVersion = "1.2.21"
    springBootVersion = "1.5.10.RELEASE"
    axonVersion = "3.1.2"
  }
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath("org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion")
    classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion")
    classpath("org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion")
  }
}

plugins {
  id "java"
  id "idea"
  id "maven"
  id "eclipse"
}

apply plugin: "kotlin"
apply plugin: "kotlin-spring"
apply plugin: "org.springframework.boot"

group = "daggerok"
version = "0.0.1"

sourceCompatibility = targetCompatibility = javaVersion

compileKotlin {
  kotlinOptions {
    freeCompilerArgs = ["-Xjsr305=strict"]
    jvmTarget = "$javaVersion"
  }
}

compileTestKotlin {
  kotlinOptions {
    freeCompilerArgs = ["-Xjsr305=strict"]
    jvmTarget = "$javaVersion"
  }
}

repositories {
  mavenCentral()
}

dependencies {
  compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
  compile("org.axonframework:axon-spring-boot-starter:$axonVersion")

  compile("org.axonframework:axon-mongo:$axonVersion")
  compile("de.flapdoodle.embed:de.flapdoodle.embed.mongo")
  compile("org.springframework.boot:spring-boot-starter-data-mongodb")

  compile("org.springframework.boot:spring-boot-starter-actuator")
  compile("org.springframework.boot:spring-boot-starter-web")
  compile("org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion")
  compile("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion")

  testCompile("org.axonframework:axon-test:$axonVersion")
  testCompile("org.springframework.boot:spring-boot-starter-test")
  testCompile("junit:junit:4.12")

  compile("io.vavr:vavr:0.9.2")
  compileOnly("org.projectlombok:lombok")
  testCompileOnly("org.projectlombok:lombok")
}

defaultTasks "clean", "build"

clean.doFirst {
  delete("$projectDir/out")
}

task wrapper(type: Wrapper) {
  distributionType = "ALL"
  gradleVersion = "4.5.1"
}
